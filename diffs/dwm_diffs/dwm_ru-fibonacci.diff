diff --git a/dwm.c b/dwm.c
index 87d0ada..967c9e8 100644
--- a/dwm.c
+++ b/dwm.c
@@ -1049,7 +1049,9 @@ manage(Window w, XWindowAttributes *wa)
 	if (c->y + HEIGHT(c) > c->mon->my + c->mon->mh)
 		c->y = c->mon->my + c->mon->mh - HEIGHT(c);
 	c->x = MAX(c->x, c->mon->mx);
-	c->y = MAX(c->y, c->mon->wy);
+	/* only fix client y-offset, if the client center might cover the bar */
+	c->y = MAX(c->y, ((c->mon->by == c->mon->my) && (c->x + (c->w / 2) >= c->mon->wx)
+		&& (c->x + (c->w / 2) < c->mon->wx + c->mon->ww)) ? bh : c->mon->my);
 	c->bw = borderpx;
 
 	wc.border_width = c->bw;
diff --git a/fibonacci.c b/fibonacci.c
new file mode 100644
index 0000000..42becff
--- /dev/null
+++ b/fibonacci.c
@@ -0,0 +1,74 @@
+static void
+fibonacci(Monitor *m, int s)
+{
+	unsigned int i, n;
+	int nx, ny, nw, nh;
+	Client *c;
+
+	for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
+	if (n == 0)
+		return;
+	if (n == 1) {
+		c = nexttiled(m->clients);
+        resize(c, m->wx + m->gappx, m->wy + m->gappx, m->ww - (2 * c->bw) - m->gappx * 2, m->wh - (2 * c->bw) - m->gappx * 2, 0);
+		return;
+	}
+
+	nx = m->wx + m->gappx;
+	ny = m->gappx;
+	nw = m->ww - 2*m->gappx;
+	nh = m->wh - 2*m->gappx;
+
+	for (i = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next)) {
+		if ((i % 2 && nh / 2 > 2*c->bw)
+		   || (!(i % 2) && nw / 2 > 2*c->bw)) {
+			if (i < n - 1) {
+				if (i % 2)
+					nh = (nh - m->gappx) / 2;
+				else
+					nw = (nw - m->gappx) / 2;
+
+				if ((i % 4) == 2 && !s)
+					nx += nw + m->gappx;
+				else if ((i % 4) == 3 && !s)
+					ny += nh + m->gappx;
+			}
+			if ((i % 4) == 0) {
+				if (s)
+					ny += nh + m->gappx;
+				else
+					ny -= nh + m->gappx;
+			}
+			else if ((i % 4) == 1)
+				nx += nw + m->gappx;
+			else if ((i % 4) == 2)
+				ny += nh + m->gappx;
+			else if ((i % 4) == 3) {
+				if (s)
+					nx += nw + m->gappx;
+				else
+					nx -= nw + m->gappx;
+			}
+			if (i == 0)	{
+				if (n != 1)
+					nw = (m->ww - 2*m->gappx - m->gappx) * m->mfact;
+				ny = m->wy + m->gappx;
+			}
+			else if (i == 1)
+				nw = m->ww - nw - m->gappx - 2*m->gappx;
+			i++;
+		}
+
+		resize(c, nx, ny, nw - (2*c->bw), nh - (2*c->bw), False);
+	}
+}
+
+void
+dwindle(Monitor *mon) {
+	fibonacci(mon, 1);
+}
+
+void
+spiral(Monitor *mon) {
+	fibonacci(mon, 0);
+}
